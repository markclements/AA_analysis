Q.new<-scaledQt(Q,bf)
Q.new
diag(Q.new)<-0
Q.new
sum(Qnew)
sum(Q.new)
Q
l=length(bf)
    res = matrix(0, l, l)
res[lower.tri(res)] = Q
l=length(bf)
    res = matrix(0, l, l)
res[lower.tri(res)] = Q
res
res = res+t(res)
res
?pml
rep(bf,each=l)
fiti6$bf
str(fiti6$bf)
bf
dim(bf_<-NULL
dim(bf)<-NULL
bf
rep(bf,each=l)
res
res*bf
res * rep(bf, each = l)
-rowSums(res)
res
res/bf
res
rep(bf,each=l)
bf
res/bf
res*bf
0.4*0.3
0.3*0.1
Q2<=c(1,1.3,1,1,1.3,1)
Q2<-c(1,1.3,1,1,1.3,1)
Q
Q2
bf2<-c(0.1,0.4,0.2,0.3)
x<-scaledQ(Q2,bf2)
X
x
diag.bf<-matrix(0,4,4)
daig.bf
diag.bf
diag(diag.bf)<-bf2
diag.bf
x*diag.bf
?diag
0.5*0.1
0.126*0.4
0.168*0.034
0.168*0.2
res = res * rep(bf,each=l)
res
bf
daig.bf
diag.bf
x
bf2
rep(bf2,each=l)
rep(bf2,each=4)
x*rep(bf2,each=4)
x
0.5*0.1
0.336*0.1
0.038*0.1
0.378*0.1
0.126*0.4
0.252*0.4
x%*%diag.bf
diag.bf
diag.bf[1,2]<-0.1
diag.bf
x*diag.bf
diag.bf[1,]<-0.1
diag.bf
diag.bf[2,]<-0.4
diag.bf[3,]<-0.2
diag.bf[4,]<-0.3
diag.bf
x*diag.bf
rep(bf2,each=l)
as.matrix(rep(bf2,each=l))
as.matrix(rep(bf2,each=l),ncol=4,nrow=4)
bf2
rep(bf2,each=l)
rep(bf2,each=4)
as.matrix(bf2,4,4)
matrix(bf2,4,4)
scaledQ <- function(Q=c(1,1,1,1,1,1), bf=c(0.25,.25,.25,.25)){
l=length(bf)
    res = matrix(0, l, l)
res[lower.tri(res)] = Q
res = res+t(res)
res = res * rep(bf2,each=l)
diag(res) = -rowSums(res)
res2 = res * rep(bf,l)
diag(res2)=0 
res = res/sum(res2)
big.pie<-matrix(bf,l,l)
res=big.pie*res
}
ls()
Q2
bf2
c<-scaledQ(Q2,bf2)
c
Q
x<-scaledQ(Q,bf)
x
bf
Q
c
sum(bf)
*19*19
19*19
19+19
fiti6
str(fiti6)
scaledQ <- function(Q=c(1,1,1,1,1,1), bf=c(0.25,.25,.25,.25)){
l=length(bf)
    res = matrix(0, l, l)
res[lower.tri(res)] = Q
res = res+t(res)
res = res * rep(bf,each=l)
diag(res) = -rowSums(res)
res2 = res * rep(bf,l)
diag(res2)=0 
res = res/sum(res2)
big.pie<-matrix(bf,l,l)
res=big.pie*res
}
x<-scaledQ(Q,bf)
x
diag(x)<-0
sum(x)
x<-scaledQ(Q,bf)
x
x<-original
x
x<-scaledQ(Q,bf)
original<-x
original
par(mar=c(3, 6, 3, 2), col="grey85")
mag = 0.5
original.vec <- as.matrix(original)
dim(original.vec) <- NULL
symbols(rep(1:nrow(original),ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
x
original
symbols(rep(1:nrow(original),ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
original.vec <- as.matrix(original)
original.vec
dim(original.vec) <- NULL
symbols(rep(1:nrow(original),ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
symbols(rep(1:nrow(original),ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag)
rep(1:nrow(original), ncol(original)
)
rep(20:1, each=nrow(original)
)
symbols(rep(1:nrow(original)),ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag)
rep(1:nrow(original),ncol(original))
rep(20:1, each=nrow(original))
symbols(rep(1:nrow(original),ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag)
symbols(rep(1:nrow(original),ncol(original)), rep(20:1, each=nrow(original))), circles = original.vec, inches=mag)
original
circles = original.vec
circles
original
diag(original)<-0
symbols(rep(1:nrow(original),ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
mag=1
symbols(rep(1:nrow(original),ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
original
0.05/0.1
0.504/0.1
0.05/0.2
0.05/0.4
0.05/0.1
0.05/0.1
0.05/0.4
0.126/0.4
scaledR <- function(Q=c(1,1,1,1,1,1), bf=c(0.25,.25,.25,.25)){
l=length(bf)
    res = matrix(0, l, l)
res[lower.tri(res)] = Q
res = res+t(res)
res = res * rep(bf,each=l)
diag(res) = -rowSums(res)
res2 = res * rep(bf,l)
diag(res2)=0 
res = res/sum(res2)
big.pie<-matrix(bf,l,l)
res=big.pie*res
res=res/big.pie
}
y<-scaledR(Q,bf)
y
x
scaledR <- function(Q=c(1,1,1,1,1,1), bf=c(0.25,.25,.25,.25)){
l=length(bf)
    res = matrix(0, l, l)
res[lower.tri(res)] = Q
res = res+t(res)
res = res * rep(bf,each=l)
diag(res) = -rowSums(res)
res2 = res * rep(bf,l)
diag(res2)=0 
res = res/sum(res2)
big.pie<-matrix(bf,l,l)
res=res/big.pie
}
y<-scaledR(Q,bf)
y
scaledR <- function(Q=c(1,1,1,1,1,1), bf=c(0.25,.25,.25,.25)){
l=length(bf)
    res = matrix(0, l, l)
res[lower.tri(res)] = Q
res = res+t(res)
res = res * rep(bf,each=l)
diag(res) = -rowSums(res)
res2 = res * rep(bf,l)
diag(res2)=0 
res = res/sum(res2)
big.pie<-matrix(bf,l,l,byrow=TRUE)
res=res/big.pie
}
y<-scaledR(Q,bf)
y
diag(y)<-0
y
original<-y
original
symbols(rep(1:nrow(original),ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
symbols(rep(1:nrow(original),ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec)
dim(original.vec) <- NULL
symbols(rep(1:nrow(original),ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec)
symbols( rep(1:nrow(original)) ,  ncol(original) ), rep(20:1, each=nrow(original)), circles = original.vec)
rep(1:nrow(original)
)
rep(1:nrow(original))
ncol(original)
rep(1:nrow(original)) ,  ncol(original) 
rep(1:nrow(original)) ,  ncol(original) )
rep(1:nrow(original) ,  ncol(original))
rep(1:nrow(original), ncol(original))
rep(20:1, each=nrow(original))
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec)
original.vec
original.vec
y
original<-y
original
original.vec <- as.matrix(original)
dim(original.vec) <- NULL
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec)
par(mar=c(3, 6, 3, 2), col="grey85")
mag = 0.5
original.vec <- as.matrix(original)
dim(original.vec) <- NULL
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original))par(mar=c(3, 6, 3, 2), col="grey85")
mag = 0.2
original.vec <- as.matrix(original)
dim(original.vec) <- NULL
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec)
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag)
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
y[1:20,]
y[1:20,]==0
y[1:20,]
y[1:20,]==0
y[1:20,]==0<-NA
y[,]==0
(y[,]==0)
(y[,]==0)<-NA
z(y[,]==0)
z<-(y[,]==0)
z
z[!0]
y
y[==0]
y[!=0]
y[!0]
y[is0]
y[!>0]
y[!0]
y[!=0]
y[y==0]
y[y==0]<-NA
y
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
original.vec <- as.matrix(original)
dim(original.vec) <- NULL
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
original<-y
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
y
original
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag)
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
mag=0.5
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
mag=0.4
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
mag=0.3
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
?panel.first
?grid
original.vec
original.vec <- as.matrix(original)
dim(original.vec) <- NULL
original.vec <- as.matrix(original)
original
original.vec <- as.matrix(original)
original.vec 
dim(original.vec) <- NULL
original.vec
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
original.vec
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=FALSE, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
y
fit$Q
dev.new()
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = fit$Q, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
res[lower.tri(res)] = Q
res[lower.tri(res)] = fit$Q
res
res = matrix(0, l, l)
res[lower.tri(res)] = fit$Q
res
original<-res
original
original.vec <- as.matrix(original)
dim(original.vec) <- NULL
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
res
y
y[y==NA]<-0
y
y[y==NA]
y[y==NA]<-0
y
y[y==NA]<-1
y
y[y<0A]<-1
y[y<0]
y[y<0]<-0
y
res
mag
mag=1
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
mag=0.5
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
original
original.vec
original.vec <- as.matrix(original)
original.vec
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
dim(original.vec) <- NULL
original.vec
dim(original.vec) <- NULL
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
scaledR
scaledR()
z<-scaledR()
z
data(yeast)
yeast
str(yeast)
yeast$genes
attr(yeast,"genes")
dm <- dist.logDet(yeast)
tree <- NJ(dm)
fit <- pml(tree,yeast)
fit
fits <- optim.pml(fit)
fits
str(fit)
ls()
save.image("C:\\Documents and Settings\\Kurt\\Desktop\\AA analysis\\.RData")
ls()
fitnew1
library(phangorn)
fitnew1
newgammaQ<-optim.pml(fitnew1)
newgammaQ<-optim.pml(fitnew1,optQ=TRUE)
newgammaQ$Q
newQ<-newgammaQ$Q
write(newQ,"gammaQ")
save.image("C:\\Documents and Settings\\Kurt\\Desktop\\AA analysis\\.RData")
rm(list=ls(all=TRUE))
read.nexus.data("longPHYAA")
raw.data<-read.nexus.data("longPHYAA")
data<-phyDat(raw.data,return.index=TRUE)
data
read.nexus("longphy_paml.nex")
read.tree("longphy_pamltree.nex")
raw.tree<-read.tree("longphy_pamltree.nex")
plot(raw.tree)
plot(raw.tree.cex=0.5)
plot(raw.tree,cex=0.5)
?brlengths
?mlphylo
compute.brlen(phy, method = "Grafen", power = 1, ...)
compute.brlen(raw.tree, method = "Grafen", power = 1)
plot(raw.tree)
plot(raw.tree,cex=0.2)
axisPhylo()
raw.tree$edge.length
raw.tree$edgelength
raw.tree$edge
raw.tree$edge.length
plot(compute.brlen(raw.tree, method = "Grafen", power = 1))
raw.tree
compute.brlen(raw.tree, method = "Grafen", power = 1)
tree<-compute.brlen(raw.tree, method = "Grafen", power = 1)
plot(tree,cex=0.4)
tree$edge.length
fit<-pml(data,tree)
fit<-pml(tree,data)
fit
raw.data
?phyDat
data<-phyDat(data,type="AA",return.index=TRUE)
data
data<-phyDat(raw.data,type="AA",return.index=TRUE)
data
fit<-pml(tree,data)
fit<-pml(tree,data,model="LG")
fit
fiti<-optim.pml(fit)
plot(fiti$tree,cex=0.4)
fit<-pml(tree,data,k=4)
fit<-pml(tree,data,k=4.model="LG")
fit<-pml(tree,data,k=4,model="LG")
fit
fiti<-optim.pml(fit,optGamma=TRUE)
plot(fiti$tree,cex=0.4)
axisPhylo()
fiti
fiti1<-optim.pml(fiti,optQ=TRUE)
fiti1$Q
fiti1$Q
fiti1
write(fiti1$Q,"LongPHYQ")
ls()
save.image("C:\\Documents and Settings\\Kurt\\Desktop\\AA analysis\\longPHYAA.RData")
fiti1<-optim.pml(fiti,optbf=TRUE)
fiti1
fiti1$Q
fiti1$bf
sum(fiti1$bf)
load("C:\\Documents and Settings\\Kurt\\Desktop\\AA analysis\\longPHYAA.RData")
fiti1$Q
fiti2<-optim.pml(fiti1,optbf=TRUE)
fiti2$bf
sum(fiti2$bf)
fiti$bf
fiti2<-optim.pml(fiti1,optBf=TRUE)
fiti2$bf
sum(fiti2$bf)
save.image("C:\\Documents and Settings\\Kurt\\Desktop\\AA analysis\\longPHYAA.RData")
plot(fiti2$tree,cex=0.5)
fiti2$Q
plot(fiti2$tree,cex=0.5)
Q<-fiti2$Q
Q
bf<-fiti2$bf
bf
sum(bf)
read.nexus.data("phyC_nointron.nexus")
bf
l=length(bf)
    res = matrix(0, l, l)
res
res[lower.tri(res)] = Q
Q
res = res+t(res)
res = res * rep(bf,each=l)
res
scaledR <- function(Q=c(1,1,1,1,1,1), bf=c(0.25,.25,.25,.25)){
l=length(bf)
    res = matrix(0, l, l)
res[lower.tri(res)] = Q
res = res+t(res)
res = res * rep(bf,each=l)
diag(res) = -rowSums(res)
res2 = res * rep(bf,l)
diag(res2)=0 
res = res/sum(res2)
big.pie<-matrix(bf,l,l,byrow=TRUE)
res=res/big.pie
}
scaledR(Q)
scaledR(Q,bf)
new<-scaledR(Q,bf)
new
write(new,"PHYlongQnew")
write(bf,"PHYlongQnew")
write(new,"PHYlongQnew")
write(new,"PHYlongQnew")
?write
write.table(new,"PHYlongQnew")
write(bf,"bf")
save.image("C:\\Documents and Settings\\Kurt\\Desktop\\AA analysis\\longPHYAA.RData")
