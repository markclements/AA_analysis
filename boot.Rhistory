y[y<0]
y[y<0]<-0
y
res
mag
mag=1
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
mag=0.5
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
original
original.vec
original.vec <- as.matrix(original)
original.vec
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
dim(original.vec) <- NULL
original.vec
dim(original.vec) <- NULL
symbols(rep(1:nrow(original), ncol(original)), rep(20:1, each=nrow(original)), circles = original.vec, inches=mag, ylim=c(0.5,19.5),fg="grey85", bg="grey20", ylab="", xlab="", xlim =range(0.5:nrow(original)), xaxt="s", yaxt="l", main="", panel.first = grid())
scaledR
scaledR()
z<-scaledR()
z
data(yeast)
yeast
str(yeast)
yeast$genes
attr(yeast,"genes")
dm <- dist.logDet(yeast)
tree <- NJ(dm)
fit <- pml(tree,yeast)
fit
fits <- optim.pml(fit)
fits
str(fit)
ls()
save.image("C:\\Documents and Settings\\Kurt\\Desktop\\AA analysis\\.RData")
ls()
fitnew1
library(phangorn)
fitnew1
newgammaQ<-optim.pml(fitnew1)
newgammaQ<-optim.pml(fitnew1,optQ=TRUE)
newgammaQ$Q
newQ<-newgammaQ$Q
write(newQ,"gammaQ")
save.image("C:\\Documents and Settings\\Kurt\\Desktop\\AA analysis\\.RData")
ls()
boot
ls()
MLboot
write.nexus(boot,"BOOT")
str(boot)
write.nexus(boot[[1]],"BOOT")
boot[[1]]
boot[1]
write.nexus(boot[1],"BOOT")
write.nexus(boot[[1]],"BOOT")
write.nexus
length(boot)
ls()
chrono
write.nexus(chrono,file="BOOT")
write.nexus(boot,file="BOOT")
write.nexus(boot[[1]],file="BOOT")
write.nexus(chrono,file="BOOT")
chrono
boot[[1]]
str(chrono)
str(boot[[1]])
ls()
boot1<-boot[[1]]
plot(boot1,cex=0.05)
write.nexus(boot1,file="BOOT")
boot1$edge.length
boot1$edge.length<-boot1$edge.length
str(boot1)
chrono$edge.length
ls()
boot2<-boot[[2]]
write.nexus(boot2,"BOOT")
str(boot2)
str(chrono)
obj <- list(boot)
obj
obj[1]
length(boot)
lenght(chrono)
length(chrono)
str(chrono)
str(boot)
lenght(boot[[1]])
length(boot[[1]])
write.nexus(boot[[1]],"BOOT")
write.nexus(boot[[1]],"BOOT",originial.data=FALSE)
length(chrono)
length(boot)
obj <- list(chrono)
obj
obj <- list(boot)
obj
length(obj)
obj
length(obj)
obj <- list(chrono)
length(obj)
length(boot1)
obj <- unlist(obj, recursive = FALSE)
obj
obj <- unlist(boot1, recursive = FALSE)
obj
ls()
fiti
boot3<-fiti$tree
boot3
ls()
fit
fit$tree
boot3<-fit$tree
boot3
length(boot3)
write.nexus(boot3,"OPEN")
str(boot3)
boot(attr,"order")<-NULL
boot3(attr,"order")<-NULL
boot3(attr,"")
boot3(attr,"order")
attr(boot3,"order")
attr(boot3,"order")<-NULL
boot3
write.nexus(boot3,"BOOT")
write.tree(boot3)
write.tree(boot3,digits=30)
?round
round(boot3$edge.length,5)
boot$edge.length<-round(boot3$edge.length,6)
write.tree(boot3,digits=6)
boot$edge.length<-round(boot3$edge.length,10)
write.tree(boot3,digits=10)
write.tree(boot3,digits=30)
boot$edge.length
boot
boot3$edge.length<-round(boot3$edge.length,6)
write.tree(boot3,digits=20)
write.tree(boot3,digits=6)
write.tree(boot3,digits=20)
boot3$edge.length[boot3$edge.length<0.0000001]
boot3$edge.length[boot3$edge.length<0.00001]
boot3$edge.length[boot3$edge.length<0.01]
boot3$edge.length[boot3$edge.length<0.001]
boot3$edge.length[boot3$edge.length<0.00001]
boot3$edge.length[boot3$edge.length<0.0000001]
boot3$edge.length[boot3$edge.length<0.000001]
boot3<-boot[[1]]
boot3$edge.length
boot3$edge.length[boot3$edge.length<0.000001]
boot3$edge.length[boot3$edge.length<0.01]
boot3$edge.length[boot3$edge.length<0.001]
boot3$edge.length[boot3$edge.length<0.00001
]
boot3$edge.length[boot3$edge.length<0.000001]
boot3$edge.length[boot3$edge.length<0.000001]<-0
boot3$edge.length[boot3$edge.length<0.000001]
boot3$edge.length[boot3$edge.length<0.0001]
boot3$edge.length[boot3$edge.length<0.001]
write.tree(boot3)
boot3$edge.length[boot3$edge.length<0.001]
boot3$edge.length[boot3$edge.length<0.0001]
boot3$edge.length[boot3$edge.length<0.0001]<-0
write.tree(boot3)
write.nexus(boot3,"BOOT")
str(boot3)
write.tree(boot3,"BOOT")
di2multi(boot, tol = 1e-06)
di2multi(boot2, tol = 1e-06)
di2multi(boot1, tol = 1e-06)
write(di2multi(boot1, tol = 1e-06))
write.tree(di2multi(boot1, tol = 1e-06))
write.tree(di2multi(boot1, tol = 1e-05))
write.tree(di2multi(boot1, tol = 1e-10))
read.tree("BOOT")
write.tree(read.tree("BOOT"))
write.tree(boot2)
write.tree(boot2,"BOOT")
write.tree(reaad.tree("BOOT"))
write.tree(read.tree("BOOT"))
boot2$edge.length
trunc(boot2$edge.length)
digits(boot2$edge.length,6)
signif(boot2$edge.length,digits=6)
boot2$edge.length<-signif(boot2$edge.length,digits=6)
write.tree(boot2)
getOption("digits")
boot2$edge.length<-zapsmall(boot2$edge.length,digits=6)
boot2$edge
boot2$edge.length
write.tree(boot2)
setOptions
getOptions
setOption
getOption
?getOption
options()
options$digits
options(digits)
options("digits")
options("digits")<-12
options(digits=12)
write.tree(boot2)
boot2
boot2<-boot[[2]]
write.tree(boot2)
options("digits")
boot2$edge.length<-zapsmall(boot2$edge.length,digits=5)
write.tree(boot2)
ls()
ML
MLboot
tree
plot(tree.cex=0.6)
plot(tree,cex=0.6)
write.tree(tree)
write.tree(boot[[1]])
cbind(tree$edge.length,boot[[1]]$edge.length)
reorder(tree,"pruningwise")
tree<-reorder(tree,"pruningwise")
cbind(tree$edge.length,boot[[1]]$edge.length)
?write
write.tree()
write.tree
write.tree(boot[[1]],digits=60)
write.tree(di2multi(boot[[1]],tol=0.0001)
)
write.tree(di2multi(boot[[1]],tol=0.01))
write.tree(di2multi(boot[[1]],tol=0.0))
write.tree(di2multi(boot[[1]],tol=0.00000000000001))
write.tree(di2multi(boot[[1]],tol=1e-03))
write.tree(di2multi(boot[[1]],tol=1e-02))
write.tree(di2multi(boot[[1]],tol=1e-1))
write.tree(di2multi(boot[[1]],tol=1e-07))
write.tree(di2multi(boot[[1]],tol=1e-20))
write.tree(di2multi(boot[[1]],tol=1))
write.tree(di2multi(boot[[1]],tol=0.9))
plot(di2multi(boot[[1]],tol=0.9))
plot(di2multi(boot[[1]],tol=0.0001))
d<-di2multi(boot[[1]],tol=0.0001))
d<-di2multi(boot[[1]],tol=0.0001)
write.tree(d)
d
d<-di2multi(boot[[1]],tol=0.001)
write.tree(d)
boot[[1]]$edge.length
write(boot[[1]]$edge.length,"edge")
R_print.scipen = asInteger(GetOption(install("scipen"), rho))
?scipen
options(scipen=5)
options(scipen)
options("scipen")
options(scipen=999)
write.tree(boot[[1]])
write(boot[[1]]$edge.length)
write(boot[[1]]$edge.length,"edge")
write.tree(boot[[1]],digits=30)
write.tree(boot[[1]],digits=3)
trunc(0.00007)
trunc(0.01)
round(1e-10)
signif(1e-10,8)
1e-10
boot2
unlist(boot2)
boot2
boot1<-boot[[1]]
boot1
ls()
data
data1
ls()
raw.data
ls()
ML
fit$tree
fiti$tree
write.nexus(fiti$tree)
write.nexus(chrono)
write.nexus(boot[1])
write.nexus(boot[[1]])
noot1
boot1
write.nexus(boot1)
chrono
str(chrono)
str(boot1)
library(phylobase)
?multiphy
??multiphy
?phylobase
?phylobase:as
?phylobase::multiPhylo-class
?phylo4
library(ade4)
??ade4
?ade4toR
write.nexus(boot1)
boot1
str(boot1)
dev.new()
str(chrono)
boot1<-reorder(boot1,"cladewise")
str(boot1)
write.nexus(boot1)
write.tree(boot1)
str(boot1)
attr(boot1,"order")
attr(boot1,"order")<-NULL
str(boot1)
write.nexus(boot1)
?grep
chrono
read.tree("PHYCboot")
boot1<-read.tree("PHYCboot")
boot1
str(boot1)
write.nexus(boot1)
write.nexus(boot1,"BOOT")
write.nexus(boot1)
write.nexus(boot1,file="BOOT"))
write.nexus(boot1,file="BOOT")
boot1
str(boot1)
boot1
boot
MLboot
ls()
write.nexus(write.tree(boot),file="BOOT1")
d<-write.tree(boot)
boot
str(boot)
boot$edge.length
boot$edge.length<-NULL
boot
d<-write.tree(boot)
write.tree(boot)
write.tree(boot[[1]])
d<-write.tree(boot[[1]])
write.nexus(d)
as.phylo
bootz<-as.phylo(boot[[1]])
bootz
write.nexus(bootz)
boot
bootz<-as.phylo(boot)
?multiphylo
??multiphlyo
ls()
boot1
str(boot1)
?multiPhylo
??multiPhylo
ls()
new
attr
bf
MPL
new
write.tree(boot[[1]])
bootz
boot1
str(boot1)
str(boot)
as.multiPhylo
?read.tree
write.nexus(boot1,file="BOOT1")
fit
fit$tree
data
str(data)
MLboot<-function(fit,data,rep=100){
x <- do.call("rbind", data) 
B<-rep
btr<-list()
length(btr) <-B
for (i in 1:B){
dataNew<-phyDat(x[,sample(ncol(x),replace=TRUE)])
#treeNew<-NJ(dist.logDet(dataNew))
fiti<-update(fit,data=dataNew)#,tree=treeNew)
btr[i]<- optim.pml(fiti)$tree} 
btr
}
MLboot(fit,data,rep=4)
c<-MLboot(fit,data,rep=4)
c
MLboot
data
fit
library(phangorn)
pml
MLboot<-function(fit,data,rep=100){
x <- do.call("rbind", data) 
B<-rep
btr<-list()
length(btr) <-B
for (i in 1:B){
dataNew<-phyDat(x[,sample(ncol(x),replace=TRUE)])
#treeNew<-NJ(dist.logDet(dataNew))
fiti<-update(fit,data=dataNew)#,tree=treeNew)
btr[i]<- optim.pml(fiti)$tree} 
btr
}
c<-MLboot(fit,data,rep=2)
raw.data
MLboot(fit,raw.data,rep=2)
boot1
boot1[1]
boot[2]
boot2[2]
boot1[2]
boot
str(boot1)
?list
?class
class(boot)
class(boot1)
str(boot1)
str(boot)
str(boot1)
class(boot)<-multiPhylo
class(boot)<-c("multiPhylo")
boot
write.nexus(boot)
boot
boot1
length(boot)
write.multi<-function(x){
for(i in 1:length(x))
write.tree(x[[i]],file="BOOT",append=TRUE)}
write.multi<-function(x,file="file"){
for(i in 1:length(x))
write.tree(x[[i]],file="file",append=TRUE)}
write.multi(boot,file="BOOT2")
write.tree
write.multi<-function(x,file=""){
for(i in 1:length(x))
write.tree(x[[i]],file=file,append=TRUE)}
write.multi(boot,file="BOOT1")
write.multi(boot,file="BOOT2")
read.tree(file="BOOT2")
write.nexus(read.tree(file="BOOT2"),file="BOOT3")
as.character(data(
as.character(data)
raw.data
x <- do.call("rbind", raw.data)
x
as.character(data)
x
as.character(data)
fit$data
x<-as.character(fit$data)
x
str(x)
x <- do.call("rbind", data)
str(x)
x <- do.call("rbind", raw.data)
str(x)
MLboot<-function(fit,rep=100){
x<-as.character(fit$data)
#x <- do.call("rbind", data) 
B<-rep
btr<-list()
length(btr) <-B
for (i in 1:B){
dataNew<-phyDat(x[,sample(ncol(x),replace=TRUE)])
#treeNew<-NJ(dist.logDet(dataNew))
fiti<-update(fit,data=dataNew)#,tree=treeNew)
btr[i]<- optim.pml(fiti)$tree} 
btr
}
boot.new<-MLboot(fit,rep=500)
boot.new
MLboot<-function(fit,rep=100){
x<-as.character(fit$data)
#x <- do.call("rbind", data) 
B<-rep
btr<-list()
length(btr) <-B
for (i in 1:B){
dataNew<-phyDat(x[,sample(ncol(x),replace=TRUE)])
#treeNew<-NJ(dist.logDet(dataNew))
fiti<-update(fit,data=dataNew)#,tree=treeNew)
btr[[i]]<- optim.pml(fiti)$tree} 
btr
}
boot.new<-NULL
boot.new<-MLboot(fit,rep=2)
boot.new
boot.new<-MLboot(fit,rep=500)
boot.new
write.multi(boot.new,file="bootnew")
write.nexus(read.tree(file="bootnew",file="500boot")
)
write.nexus(read.tree(file="bootnew"),file="500boot")
ls()
rm(attr)
ls()
c<-c(bf,bootz)
c
ls()
c<-c("bf","boot","boot1","boot1",'boot2","boot3","bootz","chrono","dated","edge","fig")
)
c
`
`
save.image("C:\\Documents and Settings\\Kurt\\Desktop\\AA analysis\\bootstraptimes.RData")
